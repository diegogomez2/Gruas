/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class vistaOtsP extends javax.swing.JPanel {

    /**
     * Creates new form vistaOtsP
     */
    public vistaOtsP(String tipo, Object[][] data) {
        initComponents();
        final int rows = 5;
        String[] columNames = {"Código OT", "Razon", "Giro", "Dirección", "Región", "Comuna", "Fecha",
            "Total", "Neto", "IVA"};
        DefaultTableModel datos = new DefaultTableModel(data, columNames){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tablaOts.setModel(datos);
        if(tablaOts.getRowCount() > 0) tablaOts.setRowSelectionInterval(0, 0);
        tablaOts.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tablaOts.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent evt){
                JTable table = (JTable)evt.getSource();
                Point p = evt.getPoint();
                int row = table.rowAtPoint(p);
                if(evt.getClickCount() == 2){
                    controladores.controladorOts miControlador = new controladores.controladorOts();
                    try {
                        miControlador.irVistaDetalleOts(tablaOts.getValueAt(row, 0).toString());
                    } catch (ParseException ex) {
                        Logger.getLogger(vistaJornadasP.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaOts = new javax.swing.JTable();
        botonFacturar = new javax.swing.JButton();

        tablaOts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaOts);

        botonFacturar.setText("Facturar OT");
        botonFacturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFacturarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonFacturar)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonFacturar)
                .addGap(0, 9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonFacturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFacturarActionPerformed
        String id;
        String idOt;
        controladores.controladorOts miControlador = new controladores.controladorOts();
        boolean selected = tablaOts.getSelectedRowCount() > 0;
        if(selected){
            int row = getFilaSeleccionada();
            id = getIdFila(row);
            idOt = getIdOt(row);
            if(miControlador.getIdFactura(idOt).compareTo("1") == 0){
                JOptionPane.showMessageDialog(null, "Esta orden de trabajo ya ha sido facturada");
            }else{
                miControlador.ingresarFactura(idOt);
                JTabbedPane tabs = (JTabbedPane)this.getParent();
                miControlador.crearControladorPrincipal(tabs);
                JOptionPane.showMessageDialog(null, "Orden de trabajo facturada con éxito");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar una orden de trabajo para ser facturada");
        }
    }//GEN-LAST:event_botonFacturarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonFacturar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaOts;
    // End of variables declaration//GEN-END:variables
    
    public JTable getTablaOts() {
        return tablaOts;
    }

    public int getFilaSeleccionada() {
        return tablaOts.getSelectedRow();
    }
    
    public String getIdFila(int row){
        return tablaOts.getValueAt(row, 0).toString();
    }
    
    public String getIdOt(int row){
        return tablaOts.getValueAt(row, 0).toString();
    }
}
